
package interfaces;

import java.awt.Image;
import java.net.URL;
import java.util.concurrent.TimeUnit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import tareapokemones.Account;
import tareapokemones.Global;
import tareapokemones.List;
import tareapokemones.NodeList;
import tareapokemones.Read;
import tareapokemones.Time;

/**
 *Ventana principal que muestra varias opciones para poder completar el juego de pokemones.
 * Esta ventana permite visualizar los segundos que transcurren al iniciar el programa, permite visualizar los watts disponibles, al igual que funciones
 * como jugar, mostrar tienda, mostrar pokemones, y guardar el juego.
 * 
 * @author chris
 */
public class vtnPrincipal extends javax.swing.JFrame {
    Account user = Global.getUser();
    List store = Global.getStore();
    Time playtime = Global.getPlaytime();
    long j = playtime.getCurrentTime();
    String pathImagePikachuSigh = "/images/Sighpikachu.png";
    String pathImagePikachuAngry  = "/images/Angrypikachu.png";
    String pathImagePikachuNormal  = "/images/Normalpikachu.png";
    String pathImagePikachuHappy  = "/images/Happypikachu.png";
    String pathImagePikachuInspired  = "/images/Inspiredpikachu.png";
    String pathImagePachirisuSigh = "/images/SighPachirisu.png";
    String pathImagePachirisuAngry  = "/images/AngryPachirisu.png";
    String pathImagePachirisuNormal  = "/images/NormalPachirisu.png";
    String pathImagePachirisuHappy  = "/images/HappyPachirisu.png";
    String pathImagePachirisuInspired  = "/images/InsoiredPachirisu.png";
    
    /**
     * Constructor de la clase vtnaPrincipal.
     * Inicializa los componentes de la interfaz gr√°fica, centra la ventana, desactiva la capacidad de redimensionamiento, muestra el tiempo y los watts recorridos en el 
     * programa.
     */
    public vtnPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        long y = System.currentTimeMillis();
        long z = TimeUnit.MILLISECONDS.toSeconds(y);

        int seconds = (int)(z - j);
        playtime.setTime(seconds);
        Time.setText(Integer.toString(playtime.getTime()));

        txtWatts.setText(Integer.toString(user.getWatts()));
        Pokemones.setText(user.getUtility().printPokemon());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGuardar1 = new javax.swing.JButton();
        btnGuardar2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnTienda = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();
        txtWatts = new javax.swing.JLabel();
        btnPokemon = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        btnEstado = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Pokemones = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        btnJugar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnGuardarJuego = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();
        btnAgregarNuevo = new javax.swing.JButton();

        btnGuardar1.setBackground(new java.awt.Color(255, 255, 153));
        btnGuardar1.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        btnGuardar1.setText("Guardar Juego");
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });

        btnGuardar2.setBackground(new java.awt.Color(255, 255, 153));
        btnGuardar2.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        btnGuardar2.setText("Guardar Juego");
        btnGuardar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar2ActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main");
        setLocationByPlatform(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnTienda.setBackground(new java.awt.Color(255, 255, 153));
        btnTienda.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        btnTienda.setText("Store");
        btnTienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTiendaActionPerformed(evt);
            }
        });
        jPanel1.add(btnTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 140, 30));

        jLabel1.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        jLabel1.setText("Watts:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel2.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        jLabel2.setText("Time:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        Time.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        Time.setText("Time");
        jPanel1.add(Time, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, -1));

        txtWatts.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        txtWatts.setText("Watts");
        jPanel1.add(txtWatts, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        btnPokemon.setBackground(new java.awt.Color(255, 255, 153));
        btnPokemon.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        btnPokemon.setText("Pokemon");
        btnPokemon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPokemonActionPerformed(evt);
            }
        });
        jPanel1.add(btnPokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 140, 30));

        jPanel2.setBackground(new java.awt.Color(255, 255, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        jLabel3.setText("Pokemones");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));
        jPanel2.add(txtEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 90, -1));

        btnEstado.setBackground(new java.awt.Color(255, 255, 153));
        btnEstado.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        btnEstado.setText("Ver estado");
        btnEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstadoActionPerformed(evt);
            }
        });
        jPanel2.add(btnEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 130, 30));

        Pokemones.setColumns(20);
        Pokemones.setRows(5);
        jScrollPane1.setViewportView(Pokemones);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 230, 100));

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane2.setViewportView(txtArea);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 250, 320));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 330, 560));

        btnJugar.setBackground(new java.awt.Color(255, 255, 153));
        btnJugar.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        btnJugar.setText("Play");
        btnJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugarActionPerformed(evt);
            }
        });
        jPanel1.add(btnJugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, 140, 30));

        jLabel4.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        jLabel4.setText("seconds");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        btnGuardarJuego.setBackground(new java.awt.Color(255, 255, 153));
        btnGuardarJuego.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        btnGuardarJuego.setText("Guardar Juego");
        btnGuardarJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarJuegoActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardarJuego, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, 140, 30));
        jPanel1.add(lblImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 160, 110));

        btnAgregarNuevo.setBackground(new java.awt.Color(255, 255, 153));
        btnAgregarNuevo.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        btnAgregarNuevo.setText("Agregar Pokemon");
        btnAgregarNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarNuevoActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 140, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Acci√≥n realizada al presionar el bot√≥n para incrementar los watts y mostrar informaci√≥n acerca del pokem√≥n, la relaci√≥n, el estado de animo, y el inventario.
     * 
     * @param evt El evento de acci√≥n que desencadena esta acci√≥n.
     */    
    
    private void btnPokemonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPokemonActionPerformed
        try {
            long y = System.currentTimeMillis();
            long z = TimeUnit.MILLISECONDS.toSeconds(y);
            int seconds = (int)(z - j);

            String result="";
            
            Time.setText(Integer.toString(seconds));
            playtime.setTime(seconds);
            user.SumWatts(10);
            
            
            int cont = 100;
            //txtWatts.setText(Integer.toString(user.getWatts()));
            NodeList currentNode = user.getUtility().getHead();
            while(currentNode!=null){
                result+= "Nombre: " + currentNode.getPokemon().getName() + "\n";
                result+= "Relacion: " + currentNode.getPokemon().getRelation() + "\n";
                result+= "Estado animo: " + currentNode.getPokemon().getStatus() + "\n";
                result+= "Inventario: \n";
                result+= currentNode.getInventory().inorder();
                
                currentNode = currentNode.getNext();
                cont+=100;
            }
            txtArea.setText(result);
            txtWatts.setText(Integer.toString(user.getWatts()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Ocurri√≥ un problema");
        }
    }//GEN-LAST:event_btnPokemonActionPerformed

    /**
     * Acci√≥n realizada al presionar el bot√≥n de mostrar la tienda.
     * 
     * @param evt El evento de acci√≥n que desencadena esta acci√≥n.
     */
    
    private void btnTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTiendaActionPerformed
        try {
            Store vtnStore = new Store();
            vtnStore.show();
            this.dispose();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se ha podido mostrar la tienda");
        }
    }//GEN-LAST:event_btnTiendaActionPerformed

    /**
     * Acci√≥n realizada al presionar el bot√≥n para poder guardar en un archivo el juego.
     * 
     * @param evt El evento de acci√≥n que desencadena esta acci√≥n.
     */
    
    private void btnGuardarJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarJuegoActionPerformed
        Read doc = new Read();
        try {
            doc.Save();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnGuardarJuegoActionPerformed

    /**
     * Acci√≥n realizada al presionar el bot√≥n para dirigerse a la ventana de jugar.
     * 
     * @param evt El evento de acci√≥n que desencadena esta acci√≥n.
     */
    
    private void btnJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugarActionPerformed
        Play game = new Play();
        game.show();
        this.dispose();
    }//GEN-LAST:event_btnJugarActionPerformed

    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardar1ActionPerformed

    private void btnGuardar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardar2ActionPerformed

    private void btnEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadoActionPerformed
        int num;
        try{
            num = Integer.parseInt(txtEstado.getText());
            if (num == 1 && user.getUtility().getHead().getPokemon().getName().equals("Pikachu") || num == 2 && user.getUtility().getHead().getNext().getPokemon().getName().equals("Pikachu")){
                System.out.println("sexoo1");
                
                if (user.getUtility().getHead().getPokemon().getStatus().equals("Sigh")) {
                    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/images/Sighpikachu.png"));
                    Image image = imageIcon.getImage();
                    ImageIcon icon = new ImageIcon(image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH));
                    lblImage.setIcon(icon);
                } else if (user.getUtility().getHead().getPokemon().getStatus().equals("Angry")) {
                    System.out.println("sexoo");
                    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/images/Angrypikachu.png"));
                    Image image = imageIcon.getImage();
                    Image newImg = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(newImg);
                    lblImage.setIcon(icon);
                } else if (user.getUtility().getHead().getPokemon().getStatus().equals("Normal")) {
                    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/images/Normalpikachu.png"));
                    Image image = imageIcon.getImage();
                    Image newImg = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(newImg);
                    lblImage.setIcon(icon);
                } else if (user.getUtility().getHead().getPokemon().getStatus().equals("Happy")) {
                    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/images/Happypikachu.png"));
                    Image image = imageIcon.getImage();
                    Image newImg = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(newImg);
                    lblImage.setIcon(icon);
                } else if (user.getUtility().getHead().getPokemon().getStatus().equals("Inspired")) {
                    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/images/Inspiredpikachu.png"));
                    Image image = imageIcon.getImage();
                    Image newImg = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(newImg);
                    lblImage.setIcon(icon);
                }
/*
            } else if (num == 1 && user.getUtility().getHead().getPokemon().getName().equals("Pachirisu")||num == 2 && user.getUtility().getHead().getPokemon().getName().equals("Pachirisu")){
                if (user.getUtility().getHead().getNext().getPokemon().getStatus().equals("Sigh")) {
                    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/images/SighPachirisu.png"));
                    image = imageIcon.getImage();
                    Image newImg = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(newImg);
                    lblImage.setIcon(icon);
                } else if (user.getUtility().getHead().getNext().getPokemon().getStatus().equals("Angry")) {
                    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/images/AngryPachirisu.png"));
                    image = imageIcon.getImage();
                    Image newImg = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(newImg);
                    lblImage.setIcon(icon);
                } else if (user.getUtility().getHead().getNext().getPokemon().getStatus().equals("Normal")) {
                    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/images/NormalPachirisu.png"));
                    image = imageIcon.getImage();
                    Image newImg = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(newImg);
                    lblImage.setIcon(icon);
                } else if (user.getUtility().getHead().getNext().getPokemon().getStatus().equals("Happy")) {
                    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/images/HappyPachirisu.png"));
                    image = imageIcon.getImage();
                    Image newImg = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(newImg);
                    lblImage.setIcon(icon);
                } else if (user.getUtility().getHead().getNext().getPokemon().getStatus().equals("Inspired")) {
                    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/images/InspiredPachirisu.png"));
                    image = imageIcon.getImage();
                    Image newImg = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(newImg);
                    lblImage.setIcon(icon);
                }
            }*/
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Valor ivalido!,Ese pokemon no existe");
        }
    }//GEN-LAST:event_btnEstadoActionPerformed

    private void btnAgregarNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarNuevoActionPerformed
        int num;
        try {
            num = user.getUtility().getHead().getPokemon().getRelation();
            if(num >= 8000){
                ShowPokemons poke = new ShowPokemons();
                poke.show();
                this.dispose();
            }else{
                JOptionPane.showMessageDialog(null, "No tienes la suficiente relacion para agregar otro pokemon");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se puede agregar otro pokemon");
        }  
    }//GEN-LAST:event_btnAgregarNuevoActionPerformed

    /**
     * M√©todo principal para ejecutar la aplicaci√≥n.
     * Crea y muestra la ventana de vtnaPrincipal.
     * 
     * @param args Los argumentos de la l√≠nea de comandos (no utilizados en esta aplicaci√≥n).
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vtnPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vtnPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vtnPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vtnPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vtnPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Pokemones;
    private javax.swing.JLabel Time;
    private javax.swing.JButton btnAgregarNuevo;
    private javax.swing.JButton btnEstado;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JButton btnGuardar2;
    private javax.swing.JButton btnGuardarJuego;
    private javax.swing.JButton btnJugar;
    private javax.swing.JButton btnPokemon;
    private javax.swing.JButton btnTienda;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblImage;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JLabel txtWatts;
    // End of variables declaration//GEN-END:variables
}
