
package interfaces;

import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import tareapokemones.Account;
import tareapokemones.Global;
import tareapokemones.List;
import tareapokemones.Time;
import tareapokemones.Tree;

/**
 *Ventana que muestra los atributos e información del pokemón.
 * Esta ventana permite que el usuario pueda visualizar los pokemones.
 * @author chris
 */
public class ShowPokemons extends javax.swing.JFrame {
    Account user = Global.getUser();
    List pokemons = Global.getPokemons();
    Time playtime = Global.getPlaytime();
    Tree invent = Global.getInvent();
    
    /**
     * Constructor de la clase ShowPokemons.
     * Inicializa los componentes de la interfaz gráfica, centra la ventana, desactiva la capacidad de redimensionamiento e imprime los  pokemones en un componente textArea.
     */
    public ShowPokemons() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        txtAreaPokemones.setText(pokemons.printPokemon());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaPokemones = new javax.swing.JTextArea();
        btnChoose = new javax.swing.JButton();
        txtnumPkemon = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ShowPokemons");
        setLocationByPlatform(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtAreaPokemones.setColumns(20);
        txtAreaPokemones.setRows(5);
        jScrollPane1.setViewportView(txtAreaPokemones);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, -1, 150));

        btnChoose.setBackground(new java.awt.Color(255, 255, 153));
        btnChoose.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        btnChoose.setText("Escoger");
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });
        jPanel1.add(btnChoose, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 110, 30));
        jPanel1.add(txtnumPkemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 180, 30));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        jLabel2.setText("Seleccione un pokemon: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSalir.setFont(new java.awt.Font("Swis721 LtEx BT", 1, 12)); // NOI18N
        btnSalir.setText("Regresar");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel2.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 130, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, 290, 360));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Acción realizada al presionar el botón para escoger mediante un número entero, el pokemóon asignado a ese número para poder visualizarlo.
     * 
     * @param evt El evento de acción que desencadena esta acción.
     */
    
    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
        int num;
        long j;
        
        try {
            if(txtnumPkemon.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Porfavor introduzca un numero");
            }else{
                
                num = Integer.parseInt(txtnumPkemon.getText());
            
                if(num == 1){
                    if (user.getUtility().getHead() != null) {
                        if(user.getUtility().getHead().getPokemon().getName().equals("Pikachu")){
                            user.getUtility().insertarFinal(pokemons.getHead().getNext().getPokemon(),invent);
                        }
                        if(user.getUtility().getHead().getNext().getPokemon().getName().equals("Pachirisu")){
                            user.getUtility().insertarFinal(pokemons.getHead().getPokemon(),invent);
                        }else{
                            JOptionPane.showMessageDialog(null, "Ya tienes el maximo de pokemones existentes");
                        }
                    }else{
                        user.getUtility().insertarFinal(pokemons.getHead().getPokemon(), invent);
                    }
                }else if(num == 2){
                    if (user.getUtility().getHead() != null) {
                        if(user.getUtility().getHead().getPokemon().getName().equals("Pikachu")){
                            user.getUtility().insertarFinal(pokemons.getHead().getNext().getPokemon(),invent);
                        }
                        if(user.getUtility().getHead().getNext().getPokemon().getName().equals("Pachirisu")){
                            user.getUtility().insertarFinal(pokemons.getHead().getPokemon(),invent);
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Ya tienes el maximo de pokemones existentes");
                        }
                    }else{
                        user.getUtility().insertarFinal(pokemons.getHead().getNext().getPokemon(),invent);
                    
                        
                    }

                }else{
                    JOptionPane.showMessageDialog(null, "Este pokemon no existe, Porfavor elija un Pokemon existente");
                }   
                    long x = System.currentTimeMillis();
                    j = TimeUnit.MILLISECONDS.toSeconds(x);
                    playtime.setCurrentTime(j);
                    
                    vtnPrincipal ventenap = new vtnPrincipal();
                    ventenap.show();
                    this.dispose();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Valor invalido!");
        }
    }//GEN-LAST:event_btnChooseActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        Menu menu = new Menu();
        menu.show();
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    /**
     * Método principal para ejecutar la aplicación.
     * Crea y muestra la ventana de visualizar los pokemones.
     * 
     * @param args Los argumentos de la línea de comandos (no utilizados en esta aplicación).
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowPokemons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowPokemons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowPokemons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowPokemons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowPokemons().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChoose;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaPokemones;
    private javax.swing.JTextField txtnumPkemon;
    // End of variables declaration//GEN-END:variables
}
